＃ Python uses indentation to indicate a block of code. Python will give you an error if you skip the indentation

if 5 > 2:
  print("Five is greater than two!")
  
＃ You have to use the same number of spaces in the same block of code, otherwise Python will give you an error
# Syntax Error:
if 5 > 2:
print("Five is greater than two!") # note that there is no indentation
        print("Five is greater than two!")
        
＃ Variables in Python:
x = 5
y = "Hello, World!"      
＃ comments start with a hashtag and can be placed at the end of a line. Python will ignore the rest of the line. 
# A comment does not have to be text that explains the code, it can also be used to prevent Python from executing code

# Insert the missing part of the code below to output "Hello World".
 print("Hello World!")
 
"""
Not quite as intended, but you can use a multiline string for a multiline comment.

Since Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it 
"""
#As long as the string is not assigned to a variable, Python will read the code, but then ignore it, and you have made a multiline comment.
# Variables are containers for storing data values.
# Python has no command for declaring a variable. A variable is created the moment you first assign a value to it.

x = 5
y = "John"
print(x)
print(y)

# Variables do not need to be declared with any particular type, and can even change type after they have been set. 
# eg.
x = 4       # x is of type int
x = "Sally" # x is now of type str
 print(x)
# Casting:If you want to specify the data type of a variable, this can be done with casting.
x = str(3)    # x will be '3'
y = int(3)    # y will be 3
z = float(3)  # z will be 3.0
# You can get the data type of a variable with the type() function
x = 5
y = "John"
print(type(x))
print(type(y))

# String variables can be declared either by using single or double quotes
x = "John"
# is the same as
x = 'John'

# Variable names are case-sensitive.
a = 4
A = "Sally"
# A will not overwrite a.

"""
A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume). Rules for Python variables:
A variable name must start with a letter or the underscore character
A variable name cannot start with a number
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
Variable names are case-sensitive (age, Age and AGE are three different variables)
A variable name cannot be any of the Python keywords.
"""

# assigning values to multiple variables
x, y, z = "Orange", "Banana", "Cherry"
print(x)
print(y)
print(z)





























